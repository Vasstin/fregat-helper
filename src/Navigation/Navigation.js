import React, { useState, useEffect } from "react"; // üîë –î–æ–±–∞–≤–ª—è–µ–º useState –∏ useEffect
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import IconButton from "@mui/material/IconButton";
import Menu from "@mui/material/Menu";
import MenuIcon from "@mui/icons-material/Menu";
import Container from "@mui/material/Container";
import Button from "@mui/material/Button";
import navLogo from "../img/fregg.png";
import { Link } from "react-router-dom"; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ 'react-router-dom'
import styled from "@emotion/styled";

// üîë –ò–ú–ü–û–†–¢–´ FIREBASE
import { onAuthStateChanged, signOut } from "firebase/auth";
import auth from "../firebase"; // –ü–£–¢–¨ –ö –í–ê–®–ï–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò

const pages = [
  "subnet",
  "epon",
  "vpls",
  "replace-config",
  "l2",
  "onu-config",
  "mac-changer",
];

const Navigation = () => {
  const [anchorElNav, setAnchorElNav] = useState(null);
  // üÜï –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false); 

  // üÜï 1. –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –°–¢–ê–¢–£–°–ê FIREBASE
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º true, –µ—Å–ª–∏ user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω–∞—á–µ false
      setIsUserLoggedIn(!!user); 
    });
    return () => unsubscribe(); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  }, []);

  // üÜï 2. –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –í–´–•–û–î–ê
  const handleLogout = async () => {
    try {
      await signOut(auth);
      handleCloseNavMenu(); 
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:", error);
    }
  };

  const handleOpenNavMenu = (event) => {
    setAnchorElNav(event.currentTarget);
  };
  const handleCloseNavMenu = () => {
    setAnchorElNav(null);
  };
  
  // ... (–í–∞—à–∏ —Å—Ç–∏–ª–∏ CustomAppBar –∏ LogoLink)
  const CustomAppBar = styled(AppBar)({
    width: "100%",
    backgroundColor: "#343a40",
  });

  const LogoLink = styled(Link)({
    width: "150px",
    paddingTop: "5px",
    textDecoration: "none",
    color: "inherit",
  });
  // ...

  return (
    <CustomAppBar position="static">
      <Container maxWidth="xl">
        <Toolbar disableGutters>
          <LogoLink to="/">
            <img width={150} src={navLogo} alt="nav-logo" />
          </LogoLink>

          {/* ----- –ú–û–ë–ò–õ–¨–ù–û–ï –ú–ï–ù–Æ (xs: "flex", md: "none") ----- */}
          <Box sx={{ flexGrow: 1, display: { xs: "flex", md: "none" } }}>
            <IconButton
              size="large"
              aria-label="menu"
              aria-controls="menu-appbar"
              aria-haspopup="true"
              onClick={handleOpenNavMenu}
              color="inherit"
            >
              <MenuIcon />
            </IconButton>
            <Menu
              id="menu-appbar"
              anchorEl={anchorElNav}
              anchorOrigin={{ vertical: "bottom", horizontal: "left" }}
              keepMounted
              transformOrigin={{ vertical: "top", horizontal: "left" }}
              open={Boolean(anchorElNav)}
              onClose={handleCloseNavMenu}
              sx={{ display: { xs: "block", md: "none" } }}
            >
                {/* –°—Å—ã–ª–∫–∏ –º–µ–Ω—é */}
                {pages.map((page) => (
                    <Link key={page} to={page} style={{ textDecoration: 'none', color: 'inherit' }}>
                        <Button onClick={handleCloseNavMenu} sx={{ display: 'block' }}>
                            {page}
                        </Button>
                    </Link>
                ))}
                {/* üÜï –ö–Ω–æ–ø–∫–∞ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/–í—ã—Ö–æ–¥–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é */}
                {isUserLoggedIn ? (
                    <Button onClick={handleLogout} sx={{ display: 'block', color: 'error.main' }}>
                        Logout
                    </Button>
                ) : (
                    <Link to="/signin" style={{ textDecoration: 'none', color: 'inherit' }}>
                        <Button onClick={handleCloseNavMenu} sx={{ display: 'block' }}>
                            Login
                        </Button>
                    </Link>
                )}
            </Menu>
          </Box>

          {/* ----- –î–ï–°–ö–¢–û–ü–ù–´–ï –°–°–´–õ–ö–ò (xs: "none", md: "flex") ----- */}
          <Box sx={{ flexGrow: 1, display: { xs: "none", md: "flex" } }}>
            {pages.map((page) => (
              <Link key={page} to={page} style={{ textDecoration: 'none' }}>
                <Button
                  onClick={handleCloseNavMenu}
                  sx={{ my: 2, color: "white", display: "block" }}
                >
                  {page}
                </Button>
              </Link>
            ))}
          </Box>
          
          {/* üÜï –ö–ù–û–ü–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò/–í–´–•–û–î–ê (–î–µ—Å–∫—Ç–æ–ø) */}
          <Box sx={{ flexGrow: 0 }}>
            {isUserLoggedIn ? (
              // üîë –ü–æ–∫–∞–∑–∞—Ç—å –í—ã–π—Ç–∏, –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
              <Button onClick={handleLogout} sx={{ my: 2, color: "white", display: "block" }}>
                Logout
              </Button>
            ) : (
               // –ü–æ–∫–∞–∑–∞—Ç—å –í–æ–π—Ç–∏, –µ—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
               <Link to="/signin" style={{ textDecoration: 'none' }}>
                  <Button sx={{ my: 2, color: "white", display: "block" }}>
                    Login
                  </Button>
               </Link>
            )}
          </Box>
        </Toolbar>
      </Container>
    </CustomAppBar>
  );
};

export default Navigation;